{ "name": "authentication",
  "memberOf": "wix-members-backend",
  "mixes": [],
  "labels":
    [ "new" ],
  "location":
    { "lineno": 41,
      "filename": "index.js" },
  "docs":
    { "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "approveByEmail",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "email",
              "type": "string",
              "doc": "Login email address of the member to approve." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 1,
              "filename": "wix_members_api_v1_MembersService_Approve_approveByEmail.js" } ],
        "docs":
          { "summary": "Approves a pending member using an email address or approval token.",
            "description":
              [ "<!--ONLY:VELO:function:approveByEmail",
                "The `approveByEmail()` function returns a Promise that resolves to a session token",
                "when the specified member is approved.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `approveByEmail()` from `wix-users-backend`.",
                "> The deprecated function will continue to work,",
                "> but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.approveByEmail()`](wix-users-backend/approveByEmail).",
                "",
                "A new member's status is `\"PENDING\"`",
                "when the site's membership policy is set to manual approval.",
                "To learn more about setting your site's membership approval policy, see",
                "[Editing Your Member Signup Settings](https://support.wix.com/en/article/editing-your-member-signup-settings-for-the-default-form).",
                "<!--END:ONLY:VELO-->",
                "",
                "<!--ONLY:VELO:function:approveByToken",
                "The `approveByToken()` function returns a Promise that resolves to a session token",
                "when the specified member is approved. Tokens must be approved within 30 hours of token creation.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `approveByToken()` from `wix-users-backend`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.approveByToken()`](wix-users-backend/approveByToken).",
                "",
                "A new member's status is `\"PENDING\"`",
                "when the site's membership policy is set to manual approval.",
                "To learn more about setting your site's membership approval policy, see",
                "[Editing Your Member Signup Settings](https://support.wix.com/en/article/editing-your-member-signup-settings-for-the-default-form).",
                "",
                "Use the `approvalToken` parameter returned from the",
                "[`register()`](wix-members-backend/authentication-obj/register)",
                "function when calling `approveByToken()`.",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { authentication } from \"wix-members-backend\";",
                      "",
                      "export function approveByEmail() {",
                      "  const email = \"a string\";",
                      "",
                      "  return authentication",
                      "    .approveByEmail(email)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "approveByToken",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "token",
              "type": "string",
              "doc": "<!--ONLY:VELO\nApproval token returned by `register()`.\n<!--END:ONLY:VELO-->" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 1,
              "filename": "wix_members_api_v1_MembersService_Approve_approveByToken.js" } ],
        "docs":
          { "summary": "Approves a pending member using an email address or approval token.",
            "description":
              [ "<!--ONLY:VELO:function:approveByEmail",
                "The `approveByEmail()` function returns a Promise that resolves to a session token",
                "when the specified member is approved.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `approveByEmail()` from `wix-users-backend`.",
                "> The deprecated function will continue to work,",
                "> but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.approveByEmail()`](wix-users-backend/approveByEmail).",
                "",
                "A new member's status is `\"PENDING\"`",
                "when the site's membership policy is set to manual approval.",
                "To learn more about setting your site's membership approval policy, see",
                "[Editing Your Member Signup Settings](https://support.wix.com/en/article/editing-your-member-signup-settings-for-the-default-form).",
                "<!--END:ONLY:VELO-->",
                "",
                "<!--ONLY:VELO:function:approveByToken",
                "The `approveByToken()` function returns a Promise that resolves to a session token",
                "when the specified member is approved. Tokens must be approved within 30 hours of token creation.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `approveByToken()` from `wix-users-backend`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.approveByToken()`](wix-users-backend/approveByToken).",
                "",
                "A new member's status is `\"PENDING\"`",
                "when the site's membership policy is set to manual approval.",
                "To learn more about setting your site's membership approval policy, see",
                "[Editing Your Member Signup Settings](https://support.wix.com/en/article/editing-your-member-signup-settings-for-the-default-form).",
                "",
                "Use the `approvalToken` parameter returned from the",
                "[`register()`](wix-members-backend/authentication-obj/register)",
                "function when calling `approveByToken()`.",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { authentication } from \"wix-members-backend\";",
                      "",
                      "export function approveByToken() {",
                      "  const token = \"a string\";",
                      "",
                      "  return authentication",
                      "    .approveByToken(token)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "blockByEmail",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "email",
              "type": "string",
              "doc": "Login email address of the member to block." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "void" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 1,
              "filename": "wix_members_api_v1_MembersService_Block_blockByEmail.js" } ],
        "docs":
          { "summary": "Blocks a member from logging in to the site.",
            "description":
              [ "<!--ONLY:VELO",
                "The `blockByEmail()` function returns a Promise that resolves",
                "when the specified member is blocked.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `blockByEmail()` from `wix-users-backend`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.blockByEmail()`](wix-users-backend/blockByEmail).",
                "",
                "To unblock the member and allow them to log in to the site, use",
                "[`approveByEmail()`](wix-members-backend/authentication-obj/approvebyemail).",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { authentication } from \"wix-members-backend\";",
                      "",
                      "export function blockByEmail() {",
                      "  const email = \"a string\";",
                      "",
                      "  return authentication",
                      "    .blockByEmail(email)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "generateSessionToken",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "email",
              "type": "string",
              "doc": "Login email address of the member to approve." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 1,
              "filename": "wix_members_api_v1_SessionService_GenerateSessionToken_generateSessionToken.js" } ],
        "docs":
          { "summary": "Creates a session token for a member authenticated by a third party.",
            "description":
              [ "<!--ONLY:VELO",
                "The `generateSessionToken()` function returns a Promise that resolves to a session token",
                "used to log a member in to your site.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `generateSessionToken()` from `wix-users-backend`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.generateSessionToken()`](wix-users-backend/generateSessionToken).",
                "",
                "Use `generateSessionToken()` to bypass Wix member authentication",
                "when using a third-party service to authenticate your members.",
                "Meaning, you can provide Single Sign-On (SSO) for members",
                "where they are authenticated by a non-Wix entity to log in to your Wix site.",
                "",
                "If the specified email address corresponds to an existing member,",
                "a session token for logging in that member is generated.",
                "",
                "If there is no existing member with the specified email address,",
                "a new member is created and a session token for logging in that member is generated.",
                "The member is created with a random password.",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { authentication } from \"wix-members-backend\";",
                      "",
                      "export function generateSessionToken() {",
                      "  const email = \"a string\";",
                      "",
                      "  return authentication",
                      "    .generateSessionToken(email)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "login",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "email",
              "type": "string",
              "doc": "Email address to use when logging the member in." },
            { "name": "password",
              "type": "string",
              "doc": "Password to use when logging the member in." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "string" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 1,
              "filename": "wix_members_api_v1_AuthService_Login_login.js" } ],
        "docs":
          { "summary": "Logs a member in with an email and password.",
            "description":
              [ "<!--ONLY:VELO",
                "The `login()` function returns a Promise that resolves to a session token",
                "used to log a member in to your site.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `login()` from `wix-users-backend`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.login()`](wix-users-backend/login).",
                "",
                "To complete the login,",
                "the returned `sessionToken` must be applied using the",
                "[`applySessionToken()`](wix-members/authentication-obj/applysessiontoken)",
                "function in client-side code.",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { authentication } from \"wix-members-backend\";",
                      "",
                      "export function login() {",
                      "  const email = \"a string\";",
                      "  const password = \"a string\";",
                      "",
                      "  return authentication",
                      "    .login(email, password)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "register",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "email",
              "type": "string",
              "doc": "Login email address for the new site member." },
            { "name": "password",
              "type": "string",
              "doc": "Password the new site member will use to log in.\n\nMust be 4 to 15 ASCII-printable characters." },
            { "name": "options",
              "type": "wix-members-backend.authentication.RegisterRequest_45497029895",
              "doc": "Registration options." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-members-backend.authentication.RegisterResult_114084057139" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 192,
              "filename": "wix_members_api_v1_AuthService_Register_register.js" } ],
        "docs":
          { "summary": "Registers new site member.",
            "description":
              [ "<!--ONLY:VELO",
                "The `register()` function returns a Promise that resolves",
                "to a `RegistrationResult` object",
                "when the member is either registered or is pending registration.",
                "",
                "> **Note:**",
                "> This function replaces the deprecated",
                "> `register()` from `wix-users-backend`.",
                "> The deprecated function will continue to work, but it will not receive updates.",
                ">",
                "> To keep any existing code compatible with future changes,",
                "> see the migration instructions at",
                "> [`wix-users-backend.register()`](wix-users-backend/register).",
                "",
                "If Site Members is",
                "[configured for automatic approval](https://support.wix.com/en/article/customizing-your-approval-settings-for-site-members),",
                "the `register()` function returns a status of `\"ACTIVE\"`,",
                "and the member will be able to log in with the assigned email and password.",
                "",
                "If Site Members is",
                "[configured for manual approval](https://support.wix.com/en/article/customizing-your-approval-settings-for-site-members),",
                "the `register()` function returns a status of `\"PENDING\"`,",
                "and the member will be a pending member of the site.",
                "To activate a pending member, the site owner can",
                "[approve the member manually](https://support.wix.com/en/article/approving-a-site-member),",
                "or you can call the",
                "[`approveByToken()`](wix-members-backend/authentication-obj/approvebytoken) or",
                "[`approveByEmail()`](wix-members-backend/authentication-obj/approveByEmail) functions.",
                "",
                "When the member is `\"ACTIVE\"`,",
                "the `sessionToken` returned must be applied using the",
                "[`applySessionToken()`](wix-members/authentication-obj/applysessiontoken)",
                "function in client-side code",
                "to complete the member registration by logging in the registered member.",
                "",
                "> **Note:**",
                "> When member registration is set to auto approve, calling the client-side",
                "> [`register()`](wix-members/authentication-obj/register)",
                "> function is equally as secure as calling it from backend code.",
                "> However, when member approval is set to manual,",
                "> calling the backend version of the `register()` function",
                "> allows you to construct more secure approval flows.",
                "<!--END:ONLY:VELO-->" ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { authentication } from \"wix-members-backend\";",
                      "",
                      "export function register() {",
                      "  const email = \"a string\";",
                      "  const password = \"a string\";",
                      "  const options = {",
                      "    contactInfo: {",
                      "      firstName: \"a string\",",
                      "      lastName: \"a string\",",
                      "      picture: \"a string\",",
                      "      emails: [\"a string\"],",
                      "      phones: [\"a string\"],",
                      "      labels: [\"a string\"],",
                      "      locale: \"a string\",",
                      "      customFields: [",
                      "        {",
                      "          name: \"a string\",",
                      "          value: {",
                      "            strValue: \"a string\"",
                      "          }",
                      "        }",
                      "      ]",
                      "    },",
                      "    profilePrivacyStatus: \"UNDEFINED\"",
                      "  };",
                      "",
                      "  return authentication",
                      "    .register(email, password, options)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          {  } },
      { "name": "sendSetPasswordEmail",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "email",
              "type": "string",
              "doc": "Login email of the member whose password will be set." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "boolean" ] },
            "doc": "Fulfilled - Indicates if the request was successfully received." },
        "locations":
          [ { "lineno": 1,
              "filename": "wix_members_api_v1_AuthService_SendSetPasswordEmail_sendSetPasswordEmail.js" } ],
        "docs":
          { "summary": "Sends a site member an email with a link to set their password.",
            "description":
              [ "<!--ONLY:VELO",
                "The `sendSetPasswordEmail()` function returns a Promise that resolves",
                "when the set password link is emailed to the member.",
                "<!--END:ONLY:VELO-->",
                "",
                "The set password link is valid for 3 hours,",
                "and it can be used only once.",
                "If the link expires, the original password remains." ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { authentication } from \"wix-members-backend\";",
                      "",
                      "export function sendSetPasswordEmail() {",
                      "  const email = \"a string\";",
                      "",
                      "  return authentication",
                      "    .sendSetPasswordEmail(email)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } } ],
  "callbacks": [],
  "messages":
    [ { "name": "Address_16286681983",
        "locations":
          [ { "lineno": 1,
              "filename": "wix_members_api_v1_AuthService_Register_register.js" } ],
        "docs":
          { "summary": "describing a physical location",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "street",
              "type": "string" },
            { "name": "city",
              "type": "string" },
            { "name": "region",
              "type": "string" },
            { "name": "country",
              "type": "string" },
            { "name": "postalCode",
              "type": "string" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "CustomField_9656655836",
        "locations":
          [ { "lineno": 35,
              "filename": "wix_members_api_v1_AuthService_Register_register.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "optional": true },
            { "name": "strValue",
              "type": "string",
              "optional": true },
            { "name": "numValue",
              "type": "number",
              "optional": true },
            { "name": "dateValue",
              "type": "Date",
              "optional": true } ],
        "extra":
          { "oneOfGroups":
              [ { "name": "value",
                  "members":
                    [ "dateValue",
                      "numValue",
                      "strValue" ] } ] },
        "labels": [] },
      { "name": "CustomField_9998741113",
        "locations":
          [ { "lineno": 12,
              "filename": "wix_members_api_v1_AuthService_Register_register.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "name",
              "type": "string",
              "doc": "name of the custom field. Unique in the site." },
            { "name": "strValue",
              "type": "string",
              "optional": true },
            { "name": "numValue",
              "type": "number",
              "optional": true },
            { "name": "dateValue",
              "type": "Date",
              "optional": true } ],
        "extra":
          { "oneOfGroups":
              [ { "name": "value",
                  "members":
                    [ "dateValue",
                      "numValue",
                      "strValue" ] } ] },
        "labels": [] },
      { "name": "Group_4003449329",
        "locations":
          [ { "lineno": 45,
              "filename": "wix_members_api_v1_AuthService_Register_register.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string" },
            { "name": "name",
              "type": "string" },
            { "name": "type",
              "type": "string" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Image_7707870310",
        "locations":
          [ { "lineno": 22,
              "filename": "wix_members_api_v1_AuthService_Register_register.js" } ],
        "docs":
          { "summary": "member's profile picture",
            "description":
              [ "supports both media-items and external urls" ],
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "WixMedia image ID." },
            { "name": "url",
              "type": "string",
              "doc": "Image URL." },
            { "name": "height",
              "type": "number",
              "doc": "Original image height." },
            { "name": "width",
              "type": "number",
              "doc": "Original image width." },
            { "name": "altText",
              "type": "string",
              "doc": "Image alt text. Optional." },
            { "name": "urlExpirationDate",
              "type": "Date",
              "doc": "Image URL expiration date (when relevant). Optional" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "MemberContactInfo_36247587788",
        "locations":
          [ { "lineno": 115,
              "filename": "wix_members_api_v1_AuthService_Register_register.js" } ],
        "docs":
          { "summary": "Contact information for the registered member.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "firstName",
              "type": "string",
              "doc": "First name.",
              "optional": true },
            { "name": "lastName",
              "type": "string",
              "doc": "Last name.",
              "optional": true },
            { "name": "picture",
              "type": "string",
              "doc": "Contact's profile picture.",
              "optional": true },
            { "name": "emails",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Contact's email addresses.",
              "optional": true },
            { "name": "phones",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "Contact's phone numbers.",
              "optional": true },
            { "name": "labels",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "List of contact's labels.",
              "optional": true },
            { "name": "locale",
              "type": "string",
              "doc": "Contact's locale, formatted as an\n[IETF BCP 47 language tag](https://tools.ietf.org/html/rfc5646).\nTypically, this is a lowercase 2-letter language code,\nfollowed by a hyphen,\nfollowed by an uppercase 2-letter country code.\n\nFor example, German from Germany is formatted as `\"de-DE\"`,\nand U.S. English is formatted as `\"en-US\"`.",
              "optional": true },
            { "name": "customFields",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-members-backend.authentication.CustomField_9656655836" ] },
              "doc": "Any number of custom fields.\n[Custom fields](https://support.wix.com/en/article/adding-custom-fields-to-contacts)\nare used to store additional information about your site's contacts.\nWhen setting a custom field, use key:value pairs,\nwhere the key matches the names defined in your site's\n[Contact List](https://support.wix.com/en/article/accessing-your-contact-list).\nYou can only set values for custom fields that already exist in the Contacts application.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "Member_102843721083",
        "locations":
          [ { "lineno": 53,
              "filename": "wix_members_api_v1_AuthService_Register_register.js" } ],
        "docs":
          { "summary": "Newly registered member.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "member's id" },
            { "name": "emailVerified",
              "type": "boolean",
              "doc": "`true` if member completed email verification, otherwise `false`" },
            { "name": "role",
              "type": "string",
              "doc": "member's role:\n\n`OWNER` - member that belongs to site owner\n`CONTRIBUTOR` - member that belongs to a contributor in site\n`MEMBER` - other members that registered to site\nOne of:\n + `\"UNDEFINED_ROLE\"`\n + `\"MEMBER\"`\n + `\"OWNER\"`\n + `\"CONTRIBUTOR\"`" },
            { "name": "loginEmail",
              "type": "string",
              "doc": "email to be used when logging in" },
            { "name": "memberName",
              "type": "string",
              "doc": "member's full name" },
            { "name": "firstName",
              "type": "string",
              "doc": "member's first name" },
            { "name": "lastName",
              "type": "string",
              "doc": "member's last name" },
            { "name": "nickname",
              "type": "string",
              "doc": "member's nickname (exposed to other members)" },
            { "name": "profilePrivacyStatus",
              "type": "string",
              "doc": "`PUBLIC` if other members can view this profile, `PRIVATE` otherwise\nOne of:\n + `\"UNDEFINED\"`\n + `\"PUBLIC\"`\n + `\"PRIVATE\"`\n + `\"COMMUNITY\"`" },
            { "name": "slug",
              "type": "string",
              "doc": "url segment for accessing the member's profile" },
            { "name": "language",
              "type": "string",
              "doc": "member's language" },
            { "name": "status",
              "type": "string",
              "doc": "member's status:\n\n`ACTIVE` - when member is approved\n`APPLICANT` - when pending site owner's approval\n`BLOCKED` - when member is blocked by the site's owner\n`INACTIVE` - not used\nOne of:\n + `\"UNDEFINED_STATUS\"`\n + `\"APPLICANT\"`\n + `\"ACTIVE\"`\n + `\"INACTIVE\"`\n + `\"BLOCKED\"`\n + `\"OFFLINE_ONLY\"`" },
            { "name": "creationDate",
              "type": "Date",
              "doc": "date the member was created" },
            { "name": "lastUpdateDate",
              "type": "Date",
              "doc": "date the member was last updated" },
            { "name": "lastLoginDate",
              "type": "Date",
              "doc": "date of last login" },
            { "name": "emails",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "member's email addresses\n(returned when `include_contact_details` is set to `true`)" },
            { "name": "phones",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "member's phone numbers\n(returned when `include_contact_details` is set to `true`)" },
            { "name": "addresses",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-members-backend.authentication.Address_16286681983" ] },
              "doc": "member's addresses\n(returned when `include_contact_details` is set to `true`)" },
            { "name": "labels",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "string" ] },
              "doc": "labels attached to the member by the owner (in contacts dashboard)\n(returned when `include_contact_details` is set to `true`)" },
            { "name": "customFields",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-members-backend.authentication.CustomField_9998741113" ] },
              "doc": "custom fields set for the member by the owner (in contacts dashboard)\n(returned when `include_contact_details` is set to `true`)" },
            { "name": "picture",
              "type": "wix-members-backend.authentication.Image_7707870310",
              "doc": "member's profile picture\nsupports both media-items and external urls" },
            { "name": "userId",
              "type": "string",
              "doc": "member's user id" },
            { "name": "groups",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-members-backend.authentication.Group_4003449329" ] },
              "doc": "Groups the the member is registered to" },
            { "name": "contactId",
              "type": "string",
              "doc": "member's contact id" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RegisterRequest_45497029895",
        "locations":
          [ { "lineno": 142,
              "filename": "wix_members_api_v1_AuthService_Register_register.js" } ],
        "docs":
          { "summary": "Registration options.",
            "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "contactInfo",
              "type": "wix-members-backend.authentication.MemberContactInfo_36247587788",
              "doc": "Contact information for the registered member.",
              "optional": true },
            { "name": "profilePrivacyStatus",
              "type": "string",
              "doc": "Sets the privacy status of a new member upon registration.\n\n<!--ONLY:REST-->\n- `PUBLIC`: Member is visible to everyone.\n- `PRIVATE`: Member is hidden from site visitors and other site members. Member is returned only to site contributors and apps with the appropriate permissions.\n- `UNKNOWN`: Insufficient permissions to get the status.\n<!--END:ONLY:REST-->\n\n<!--ONLY:VELO\nOne of:\n\n- `\"PUBLIC\"`: Member is visible to everyone.\n- `\"PRIVATE\"`: Member is hidden from site visitors and other site members. Member is returned only to site contributors and apps with the appropriate permissions.\n- `\"UNKNOWN\"`: Insufficient permissions to get the status.\n<!--END:ONLY:VELO-->\nOne of:\n + `\"UNDEFINED\"`\n + `\"PUBLIC\"`\n + `\"PRIVATE\"`\n + `\"COMMUNITY\"`",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RegisterResult_114084057139",
        "locations":
          [ { "lineno": 169,
              "filename": "wix_members_api_v1_AuthService_Register_register.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "status",
              "type": "string",
              "doc": "member's status:\n\n`ACTIVE` - when member is approved\n`APPLICANT` - when pending site owner's approval\n`BLOCKED` - when member is blocked by the site's owner\n`INACTIVE` - not used\nOne of:\n + `\"UNDEFINED_STATUS\"`\n + `\"APPLICANT\"`\n + `\"ACTIVE\"`\n + `\"INACTIVE\"`\n + `\"BLOCKED\"`\n + `\"OFFLINE_ONLY\"`" },
            { "name": "member",
              "type": "wix-members-backend.authentication.Member_102843721083",
              "doc": "Newly registered member." },
            { "name": "sessionToken",
              "type": "string" },
            { "name": "approvalToken",
              "type": "string",
              "doc": "in case the site requires members approval, the registered member\nwill be an applicant until he's approved. the token can be used as a member\nidentifier for approval using the `MembersService.Approve` API" } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }