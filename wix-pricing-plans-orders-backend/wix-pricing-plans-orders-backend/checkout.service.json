{ "name": "checkout",
  "memberOf": "wix-pricing-plans-orders-backend",
  "mixes": [],
  "labels": [],
  "location":
    { "lineno": 17,
      "filename": "index.js" },
  "docs":
    { "links": [],
      "examples": [],
      "extra":
        {  } },
  "properties": [],
  "operations":
    [ { "name": "changeStartDate",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "orderId",
              "type": "string",
              "doc": "Draft order ID." },
            { "name": "startDate",
              "type": "Date",
              "doc": "New valid from date (timestamp)." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-pricing-plans-orders-backend.checkout.ChangeStartDateResult_102505958225" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 44,
              "filename": "com_wixpress_membership_v2_orders_CheckoutService_ChangeStartDate_changeStartDate.js" } ],
        "docs":
          { "summary": "Change the start date of a draft order.",
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { checkout } from \"wix-pricing-plans-orders-backend\";",
                      "",
                      "export function changeStartDate() {",
                      "  const orderId = \"a string\";",
                      "  const startDate = new Date();",
                      "",
                      "  return checkout",
                      "    .changeStartDate(orderId, startDate)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "getOfflineOrderPreview",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "planId",
              "type": "string",
              "doc": "Plan ID to be purchased." },
            { "name": "buyerId",
              "type": "string",
              "doc": "Member ID of the purchaser." },
            { "name": "startDate",
              "type": "Date",
              "doc": "Date from which the plan would be valid. Defaults to current time." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-pricing-plans-orders-backend.checkout.GetOfflineOrderPreviewResult_105260909524" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 9,
              "filename": "com_wixpress_membership_v2_orders_CheckoutService_GetOfflineOrderPreview_getOfflineOrderPreview.js" } ],
        "docs":
          { "summary": "Forms an order preview using same logic as purchasing, except that it is not persisted anywhere.",
            "description":
              [ "Purchase limitations are not applied, only available to site owner.",
                "Tax is applied if the site has it configured.",
                "[More information on Tax here](https://support.wix.com/en/article/pricing-plans-setting-up-tax-collection)." ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { checkout } from \"wix-pricing-plans-orders-backend\";",
                      "",
                      "export function getOfflineOrderPreview() {",
                      "  const planId = \"a string\";",
                      "  const buyerId = \"a string\";",
                      "  const startDate = new Date();",
                      "",
                      "  return checkout",
                      "    .getOfflineOrderPreview(planId, buyerId, startDate)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "getOnlineOrderPreview",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "planId",
              "type": "string",
              "doc": "Plan ID." },
            { "name": "startDate",
              "type": "Date",
              "doc": "Date from which the plan would be valid. Defaults to current time." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-pricing-plans-orders-backend.checkout.GetOnlineOrderPreviewResult_105955144302" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 9,
              "filename": "com_wixpress_membership_v2_orders_CheckoutService_GetOnlineOrderPreview_getOnlineOrderPreview.js" } ],
        "docs":
          { "summary": "Forms an order preview using same logic as purchasing, except that it is not persisted anywhere.",
            "description":
              [ "Checks for purchase limitations, intended to be called with member identity.",
                "[More information on tax here](https://support.wix.com/en/article/pricing-plans-setting-up-tax-collection).",
                "Will not be exposed until StartOnlineOrder is exposed." ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { checkout } from \"wix-pricing-plans-orders-backend\";",
                      "",
                      "export function getOnlineOrderPreview() {",
                      "  const planId = \"a string\";",
                      "  const startDate = new Date();",
                      "",
                      "  return checkout",
                      "    .getOnlineOrderPreview(planId, startDate)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "getPricePreview",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "planId",
              "type": "string",
              "doc": "Plan ID to be purchased." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-pricing-plans-orders-backend.checkout.GetPricePreviewResult_6443498682" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 8,
              "filename": "com_wixpress_membership_v2_orders_CheckoutService_GetPricePreview_getPricePreview.js" } ],
        "docs":
          { "summary": "Returns plan pricing. Tax is applied only if the site has it configured.",
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { checkout } from \"wix-pricing-plans-orders-backend\";",
                      "",
                      "export function getPricePreview() {",
                      "  const planId = \"a string\";",
                      "",
                      "  return checkout",
                      "    .getPricePreview(planId)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "registerOfflineOrder",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "planId",
              "type": "string",
              "doc": "Plan ID." },
            { "name": "buyerId",
              "type": "string",
              "doc": "Member ID." },
            { "name": "registerOfflineOrderOptions",
              "type": "wix-pricing-plans-orders-backend.checkout.RegisterOfflineOrderRequest_887827737" } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-pricing-plans-orders-backend.checkout.RegisterOfflineOrderResult_100054254093" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 51,
              "filename": "com_wixpress_membership_v2_orders_CheckoutService_RegisterOfflineOrder_registerOfflineOrder.js" } ],
        "docs":
          { "summary": "Assigns a plan to a member. Payment should be handled offline.",
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { checkout } from \"wix-pricing-plans-orders-backend\";",
                      "",
                      "export function registerOfflineOrder() {",
                      "  const planId = \"a string\";",
                      "  const buyerId = \"a string\";",
                      "  const registerOfflineOrderOptions = {",
                      "    startDate: new Date(),",
                      "    paid: true",
                      "  };",
                      "",
                      "  return checkout",
                      "    .registerOfflineOrder(planId, buyerId, registerOfflineOrderOptions)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } },
      { "name": "startOnlineOrder",
        "labels": [],
        "nameParams": [],
        "params":
          [ { "name": "planId",
              "type": "string",
              "doc": "Plan ID." },
            { "name": "startDate",
              "type": "Date",
              "doc": "Date from which the plan is valid. Defaults to current date." } ],
        "ret":
          { "type":
              { "name": "Promise",
                "typeParams":
                  [ "wix-pricing-plans-orders-backend.checkout.StartOnlineOrderResult_99948332546" ] },
            "doc": "" },
        "locations":
          [ { "lineno": 44,
              "filename": "com_wixpress_membership_v2_orders_CheckoutService_StartOnlineOrder_startOnlineOrder.js" } ],
        "docs":
          { "summary": "Creates an order and initiates payment for currently logged in member.",
            "description":
              [ "Will not be exposed to 3rd parties until Wix Payments are exposed." ],
            "links": [],
            "examples":
              [ { "title": "basic usage",
                  "body":
                    [ "import { checkout } from \"wix-pricing-plans-orders-backend\";",
                      "",
                      "export function startOnlineOrder() {",
                      "  const planId = \"a string\";",
                      "  const startDate = new Date();",
                      "",
                      "  return checkout",
                      "    .startOnlineOrder(planId, startDate)",
                      "    .then((response) => {",
                      "      console.log(response);",
                      "    })",
                      "    .catch((error) => {",
                      "      console.error(error);",
                      "    });",
                      "}" ],
                  "extra":
                    {  } } ],
            "extra":
              {  } },
        "extra":
          { "customLabels":
              [ { "id": "maturity-beta" } ] } } ],
  "callbacks": [],
  "messages":
    [ { "name": "ChangeStartDateResult_102505958225",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wixpress_membership_v2_orders_CheckoutService_ChangeStartDate_changeStartDate.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "ID of the order" },
            { "name": "planId",
              "type": "string",
              "doc": "ID of the plan that was purchased" },
            { "name": "subscriptionId",
              "type": "string",
              "doc": "ID of the associated subscription in Subscriptions service" },
            { "name": "wixPayOrderId",
              "type": "string",
              "doc": "ID of the associated Wix Pay order (empty when the order is free)" },
            { "name": "buyer",
              "type": "wix-pricing-plans-orders-backend.Buyer_7090719842",
              "doc": "ID and type of the buyer (member type only for now)." },
            { "name": "planPricing",
              "type": "wix-pricing-plans-orders-backend.Pricing_14851691891",
              "doc": "Pricing of the plan at the time of order creation." },
            { "name": "priceDetails",
              "type": "wix-pricing-plans-orders-backend.PriceDetails_6109500344",
              "doc": "Detailed price of one payment cycle." },
            { "name": "orderType",
              "type": "string",
              "doc": "Online or offline\nOne of:\n + `\"UNDEFINED\"`\n + `\"ONLINE\"`\n + `\"OFFLINE\"`" },
            { "name": "orderStatus",
              "type": "string",
              "doc": "Status of the order (active, expired, etc.)\nOne of:\n + `\"UNDEFINED\"`\n + `\"DRAFT\"`\n + `\"PENDING\"`\n + `\"ACTIVE\"`\n + `\"EXPIRED\"`\n + `\"SUSPENDED\"`" },
            { "name": "canceled",
              "type": "boolean",
              "doc": "Order has been either canceled or set to cancel at next cycle." },
            { "name": "cancellation",
              "type": "wix-pricing-plans-orders-backend.Cancellation_13497762718",
              "doc": "Details about the cancellation. Present if order.canceled is true, empty otherwise." },
            { "name": "paymentStatus",
              "type": "string",
              "doc": "Status of the payment for this this order (updated manually by owner for offline orders, automatically for online orders)\nOne of:\n + `\"UNDEFINED\"`\n + `\"PAID\"`\n + `\"REFUNDED\"`\n + `\"FAILED\"`\n + `\"UNPAID\"`\n + `\"PENDING\"`" },
            { "name": "startDate",
              "type": "Date",
              "doc": "Date when the order will become active" },
            { "name": "endDate",
              "type": "Date",
              "doc": "Date when the order will expire" },
            { "name": "suspensions",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-pricing-plans-orders-backend.Suspension_6924382778" ] },
              "doc": "List of suspension and resumption dates for this order, if there were any" },
            { "name": "initialEndDateWithSuspensions",
              "type": "Date",
              "doc": "Initial order expiration date that was calculated on purchase plus duration of suspensions" },
            { "name": "planName",
              "type": "string",
              "doc": "Name of the plan at the time of purchase" },
            { "name": "planDescription",
              "type": "string",
              "doc": "Plan description of the plan at the time of purchase" },
            { "name": "_createdDate",
              "type": "Date",
              "doc": "Date when the order was created (before initiating a payment or any other actions)" },
            { "name": "_updatedDate",
              "type": "Date",
              "doc": "Date when the order was last updated (for example, suspended)" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "GetOfflineOrderPreviewResult_105260909524",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wixpress_membership_v2_orders_CheckoutService_GetOfflineOrderPreview_getOfflineOrderPreview.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "order",
              "type": "wix-pricing-plans-orders-backend.Order_102262272644",
              "doc": "Will be missing if limit is exceeded" },
            { "name": "purchaseLimitExceeded",
              "type": "boolean",
              "doc": "Whether the purchase limit has already been reached for this plan by this member.\n Always false for plans without purchase limits." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "GetOnlineOrderPreviewResult_105955144302",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wixpress_membership_v2_orders_CheckoutService_GetOnlineOrderPreview_getOnlineOrderPreview.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "order",
              "type": "wix-pricing-plans-orders-backend.Order_102262272644",
              "doc": "Will be missing if limit is exceeded" },
            { "name": "purchaseLimitExceeded",
              "type": "boolean",
              "doc": "Whether the purchase limit has already been reached for this plan by this member.\n Always false for plans without purchase limits." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "GetPricePreviewResult_6443498682",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wixpress_membership_v2_orders_CheckoutService_GetPricePreview_getPricePreview.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "currency",
              "type": "string",
              "doc": "Currency code in ISO 4217 format (e.g., USD)." },
            { "name": "price",
              "type": "wix-pricing-plans-orders-backend.PriceDetails_6109500344",
              "doc": "Detailed price of one payment cycle." } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RegisterOfflineOrderRequest_887827737",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wixpress_membership_v2_orders_CheckoutService_RegisterOfflineOrder_registerOfflineOrder.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "startDate",
              "type": "Date",
              "doc": "Date from which the plan is valid. Defaults to current date.",
              "optional": true },
            { "name": "paid",
              "type": "boolean",
              "doc": "Whether the order is paid. Defaults to false.",
              "optional": true } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "RegisterOfflineOrderResult_100054254093",
        "locations":
          [ { "lineno": 8,
              "filename": "com_wixpress_membership_v2_orders_CheckoutService_RegisterOfflineOrder_registerOfflineOrder.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "ID of the order" },
            { "name": "planId",
              "type": "string",
              "doc": "ID of the plan that was purchased" },
            { "name": "subscriptionId",
              "type": "string",
              "doc": "ID of the associated subscription in Subscriptions service" },
            { "name": "wixPayOrderId",
              "type": "string",
              "doc": "ID of the associated Wix Pay order (empty when the order is free)" },
            { "name": "buyer",
              "type": "wix-pricing-plans-orders-backend.Buyer_7090719842",
              "doc": "ID and type of the buyer (member type only for now)." },
            { "name": "planPricing",
              "type": "wix-pricing-plans-orders-backend.Pricing_14851691891",
              "doc": "Pricing of the plan at the time of order creation." },
            { "name": "priceDetails",
              "type": "wix-pricing-plans-orders-backend.PriceDetails_6109500344",
              "doc": "Detailed price of one payment cycle." },
            { "name": "orderType",
              "type": "string",
              "doc": "Online or offline\nOne of:\n + `\"UNDEFINED\"`\n + `\"ONLINE\"`\n + `\"OFFLINE\"`" },
            { "name": "orderStatus",
              "type": "string",
              "doc": "Status of the order (active, expired, etc.)\nOne of:\n + `\"UNDEFINED\"`\n + `\"DRAFT\"`\n + `\"PENDING\"`\n + `\"ACTIVE\"`\n + `\"EXPIRED\"`\n + `\"SUSPENDED\"`" },
            { "name": "canceled",
              "type": "boolean",
              "doc": "Order has been either canceled or set to cancel at next cycle." },
            { "name": "cancellation",
              "type": "wix-pricing-plans-orders-backend.Cancellation_13497762718",
              "doc": "Details about the cancellation. Present if order.canceled is true, empty otherwise." },
            { "name": "paymentStatus",
              "type": "string",
              "doc": "Status of the payment for this this order (updated manually by owner for offline orders, automatically for online orders)\nOne of:\n + `\"UNDEFINED\"`\n + `\"PAID\"`\n + `\"REFUNDED\"`\n + `\"FAILED\"`\n + `\"UNPAID\"`\n + `\"PENDING\"`" },
            { "name": "startDate",
              "type": "Date",
              "doc": "Date when the order will become active" },
            { "name": "endDate",
              "type": "Date",
              "doc": "Date when the order will expire" },
            { "name": "suspensions",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-pricing-plans-orders-backend.Suspension_6924382778" ] },
              "doc": "List of suspension and resumption dates for this order, if there were any" },
            { "name": "initialEndDateWithSuspensions",
              "type": "Date",
              "doc": "Initial order expiration date that was calculated on purchase plus duration of suspensions" },
            { "name": "planName",
              "type": "string",
              "doc": "Name of the plan at the time of purchase" },
            { "name": "planDescription",
              "type": "string",
              "doc": "Plan description of the plan at the time of purchase" },
            { "name": "_createdDate",
              "type": "Date",
              "doc": "Date when the order was created (before initiating a payment or any other actions)" },
            { "name": "_updatedDate",
              "type": "Date",
              "doc": "Date when the order was last updated (for example, suspended)" } ],
        "extra":
          {  },
        "labels": [] },
      { "name": "StartOnlineOrderResult_99948332546",
        "locations":
          [ { "lineno": 1,
              "filename": "com_wixpress_membership_v2_orders_CheckoutService_StartOnlineOrder_startOnlineOrder.js" } ],
        "docs":
          { "links": [],
            "examples": [],
            "extra":
              {  } },
        "members":
          [ { "name": "_id",
              "type": "string",
              "doc": "ID of the order" },
            { "name": "planId",
              "type": "string",
              "doc": "ID of the plan that was purchased" },
            { "name": "subscriptionId",
              "type": "string",
              "doc": "ID of the associated subscription in Subscriptions service" },
            { "name": "wixPayOrderId",
              "type": "string",
              "doc": "ID of the associated Wix Pay order (empty when the order is free)" },
            { "name": "buyer",
              "type": "wix-pricing-plans-orders-backend.Buyer_7090719842",
              "doc": "ID and type of the buyer (member type only for now)." },
            { "name": "planPricing",
              "type": "wix-pricing-plans-orders-backend.Pricing_14851691891",
              "doc": "Pricing of the plan at the time of order creation." },
            { "name": "priceDetails",
              "type": "wix-pricing-plans-orders-backend.PriceDetails_6109500344",
              "doc": "Detailed price of one payment cycle." },
            { "name": "orderType",
              "type": "string",
              "doc": "Online or offline\nOne of:\n + `\"UNDEFINED\"`\n + `\"ONLINE\"`\n + `\"OFFLINE\"`" },
            { "name": "orderStatus",
              "type": "string",
              "doc": "Status of the order (active, expired, etc.)\nOne of:\n + `\"UNDEFINED\"`\n + `\"DRAFT\"`\n + `\"PENDING\"`\n + `\"ACTIVE\"`\n + `\"EXPIRED\"`\n + `\"SUSPENDED\"`" },
            { "name": "canceled",
              "type": "boolean",
              "doc": "Order has been either canceled or set to cancel at next cycle." },
            { "name": "cancellation",
              "type": "wix-pricing-plans-orders-backend.Cancellation_13497762718",
              "doc": "Details about the cancellation. Present if order.canceled is true, empty otherwise." },
            { "name": "paymentStatus",
              "type": "string",
              "doc": "Status of the payment for this this order (updated manually by owner for offline orders, automatically for online orders)\nOne of:\n + `\"UNDEFINED\"`\n + `\"PAID\"`\n + `\"REFUNDED\"`\n + `\"FAILED\"`\n + `\"UNPAID\"`\n + `\"PENDING\"`" },
            { "name": "startDate",
              "type": "Date",
              "doc": "Date when the order will become active" },
            { "name": "endDate",
              "type": "Date",
              "doc": "Date when the order will expire" },
            { "name": "suspensions",
              "type":
                { "name": "Array",
                  "typeParams":
                    [ "wix-pricing-plans-orders-backend.Suspension_6924382778" ] },
              "doc": "List of suspension and resumption dates for this order, if there were any" },
            { "name": "initialEndDateWithSuspensions",
              "type": "Date",
              "doc": "Initial order expiration date that was calculated on purchase plus duration of suspensions" },
            { "name": "planName",
              "type": "string",
              "doc": "Name of the plan at the time of purchase" },
            { "name": "planDescription",
              "type": "string",
              "doc": "Plan description of the plan at the time of purchase" },
            { "name": "_createdDate",
              "type": "Date",
              "doc": "Date when the order was created (before initiating a payment or any other actions)" },
            { "name": "_updatedDate",
              "type": "Date",
              "doc": "Date when the order was last updated (for example, suspended)" } ],
        "extra":
          {  },
        "labels": [] } ],
  "extra":
    {  } }